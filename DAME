
# -*- coding: utf-8 -*-
"""
Created on Wed Feb 17 10:44:01 2021

@author: valentinmerault
"""

from tkinter import *

# Fonction GRAPHIQUE :
def carre(x, y, coul,ecart):
    "Permet de tracer des carre, utile au damier."
    cnv.create_rectangle(x, y, x + ecart, y + ecart, fill=coul)

def plateau(start,y,ecart):
    "Permet de créer le plateau de jeux"

    for i in range(10):
        x = start
        for j in range(10):

            if (i + j) % 2 == 0:
                carre(x, y, "ivory",ecart)
            else:
                carre(x, y, "brown",ecart)
            x += ecart
        y += ecart

    cnv.create_rectangle(SIZE*0.02,SIZE*0.52,SIZE+SIZE*0.02,SIZE*0.525, fill ="black")

def initPionsNoirs(SIZE,pad,pady,ecart):
    "Permet de placer les pions du joueur noir"

    x,y= SIZE * 0.117, SIZE* 0.0165
    for i in range(4):

        for j in range(5):
            cnv.create_oval(x + pad , y +pad , x + ecart, y + ecart, fill="black")
            x += pady*2

        y += pady
        if i%2 == 0:
            x = SIZE * 0.0165
        else:
            x = SIZE * 0.117

def initPionsBlanc(SIZE,pad,pady,ecart):
    "Permet de placer les pions du joueur blanc"

    x, y = SIZE * 0.0165, SIZE * 0.9165

    for i in range(4):

        for j in range(5):
            cnv.create_oval(x + pad, y + pad, x + ecart, y + ecart, fill="#E2BC74")
            x += pady*2

        y -= pady
        if i % 2 == 0:

            x = SIZE * 0.117
        else:
            x = SIZE * 0.0165


# Game gestion :
def label_reset(alt):
    alt += 1
    if alt%2 ==0:
        bouton_start['text'] = "Afficher le damier"
    else:
        bouton_start['text'] = "Recommencer une partie"
    cnv.delete('all')

def alt_joueur():
    global player, color

    player += 1
    if player%2 ==0:
        color = "#E2BC74"
    else:
        color = "black"

    return color

global player
player = 0


# Fonction GESTION CLICK :
def left_clic(event): #coordonée du clic
    global color, oval
    X=event.x
    Y=event.y
    X -= SIZE * 0.05
    Y -= SIZE * 0.05

    cnv.create_oval(X + pad, Y + pad, X + ecart, Y + ecart, fill=color)


# On crée les variables utiles aux différents fonctions.
SIZE = 600   # Longueur et Hauteur du canvas.
pad = SIZE * 0.007
pady = SIZE * 0.1
ecart = SIZE * 0.1
x = SIZE * 0.02
y = SIZE * 0.02

# Affichage :
fen = Tk()
fen.resizable(width=0, height=0) # Rend impossible le redimensionnement de la fenêtre.

cnv = Canvas(fen, width=SIZE+SIZE*0.03, height=SIZE+SIZE*0.03, bg="ivory")
cnv.pack(side = TOP)

# Interface Graphique :
# Boutons :
alt = 0
global color
color = "#E2BC74"
bouton_start = Button(fen, text = "Afficher le damier", command=lambda: [label_reset(alt),plateau(x,y,ecart),initPionsNoirs(SIZE,pad,pady,ecart),initPionsBlanc(SIZE,pad,pady,ecart)]
                      ,width = 20, height = 3, bg = "#E2BC74", fg = "brown")
bouton_start.pack(side = LEFT)

bouton_player = Button(fen, text = "Fin de tour",command = lambda :[alt_joueur()],width = 20, height = 3, bg = "#E2BC74", fg = "brown")
bouton_player.pack(side = RIGHT)

cnv.bind("<ButtonRelease>",left_clic)

# Règle :
Label_regle =  Label(fen, text = "FONCTIONNEMENT : ",bg = "ivory",fg = "brown",font='Arial 10 bold').pack(
          side=TOP,expand=1)

Label_txt = Label(fen, text = "Pour déplacer un pion, vous pouvez glisser déposer,\nou bien directement cliquer au centre de la case souhaitée.",bg = "ivory",fg = "brown",font='Arial 10 bold', justify=CENTER).pack(
          side=TOP,fill=BOTH, expand=1)


fen.mainloop()
